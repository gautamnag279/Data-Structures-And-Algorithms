> Rules to get time complexity:
    - prioritize the highest degree polynomial
    - ignore attached constants


> Ex: Sum of an array
-------------------------------------------------------------
def sum(arr, n):
    sum = 0                 = 1 
    for i in range(n):      = n+1 
        sum += arr[i]       = n 
    return sum              = 1

                       f(n) = 2n + 3
i.e
    - time complexity is O(n)


> Ex: Sum of 2 matrices of size n X n
-------------------------------------------------------------
def sum(A, B, n):
    for i in range(n):                      = n+1 
        for j in range(n):                  = n*(n+1) 
            C[i, j] += A[i, j] + B[i, j]    = n*n 
    return C[i, j]                          = 1

                                       f(n) = 2n^2 + 2n + 1
i.e.
    - time complexity is O(n^2)