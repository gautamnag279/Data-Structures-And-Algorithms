Say we have array 'arr' where we have to find the a value 'k' inside an aray:

-----------
Example 1:
-----------
arr = [11, 6, 2, 5, 9, 7, 64, 3, 16, 18]
k = ?
Algorithm = Linear search

Best Case >  When k = 11, we find k at the first index, i.e O(1)
Worst Case > When k = 18, we traverse the length of array, i.e. O(n)

Now:
    Average Case > all possible case time / no. of cases 

# Note:
- Average case time is not possible for most algorithms and is therefore just used interchangably used with the worst case time of that algorithm.

----------
Example 2:
----------
arr = [20, 10, 15, 30, 25, 40]
k = ?
Algorithm = Binary search

Best Case > k = 20, we find k at the root element, i.e. O(1)
Worst Case > k = 5/15/25/40, we traverse the length of the tree, i.e. O(logn)